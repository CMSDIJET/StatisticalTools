#!/usr/bin/env python

import sys, os, subprocess, string, re
from ROOT import *
from array import array
import CMS_lumi


gROOT.SetBatch(kTRUE);
gStyle.SetOptStat(0)
gStyle.SetOptTitle(0)
gStyle.SetTitleFont(42, "XYZ")
gStyle.SetTitleSize(0.06, "XYZ")
gStyle.SetLabelFont(42, "XYZ")
gStyle.SetLabelSize(0.05, "XYZ")
gStyle.SetCanvasBorderMode(0)
gStyle.SetFrameBorderMode(0)
gStyle.SetCanvasColor(kWhite)
gStyle.SetPadTickX(1)
gStyle.SetPadTickY(1)
gStyle.SetPadLeftMargin(0.15)
gStyle.SetPadRightMargin(0.05)
gStyle.SetPadTopMargin(0.05)
gStyle.SetPadBottomMargin(0.15)
gROOT.ForceStyle()

masses = array('d')
xs_obs_limits = array('d')
xs_exp_limits = array('d')
masses_exp = array('d')
xs_exp_limits_1sigma = array('d')
xs_exp_limits_1sigma_up = array('d')
xs_exp_limits_2sigma = array('d')
xs_exp_limits_2sigma_up = array('d')

syst = True
#syst = False

########################################################
## DijetLimitCode

masses = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7100.0, 7200.0])
xs_obs_limits = array('d', [0.836478, 0.774447, 1.23998, 0.959869, 0.526238, 0.310743, 0.219122, 0.14414, 0.117179, 0.131122, 0.127128, 0.0906086, 0.104278, 0.117512, 0.122472, 0.120322, 0.121221, 0.113741, 0.102283, 0.0975416, 0.0961606, 0.0925603, 0.0792465, 0.0676229, 0.0701066, 0.0671454, 0.0527954, 0.0336437, 0.0224766, 0.0150056, 0.0121905, 0.0103843, 0.00921951, 0.00866013, 0.00924763, 0.0110804, 0.0127599, 0.0139334, 0.0141779, 0.013463, 0.0126392, 0.0119217, 0.0112133, 0.010475, 0.00967835, 0.00879789, 0.00802754, 0.00750105, 0.00693862, 0.00675818, 0.00620987, 0.00612767, 0.00588462, 0.00575895, 0.00572472, 0.00575174, 0.00590138, 0.00613816])
xs_exp_limits = array('d', [0.807865, 0.749822, 0.636492, 0.501165, 0.442055, 0.373683, 0.308796, 0.274763, 0.2461, 0.21873, 0.197548, 0.159459, 0.144599, 0.12325, 0.112418, 0.101445, 0.092047, 0.0772591, 0.0728687, 0.0636055, 0.0546508, 0.0506898, 0.0467854, 0.0444067, 0.0383595, 0.0337996, 0.0299116, 0.0287613, 0.0256873, 0.0245892, 0.0222354, 0.0203452, 0.0190944, 0.0182157, 0.015392, 0.0142076, 0.0136367, 0.0126589, 0.012195, 0.0112466, 0.0102815, 0.00954721, 0.00920796, 0.00848258, 0.00804014, 0.00762756, 0.0071216, 0.00727543, 0.00694033, 0.00698688, 0.00702847, 0.0068209, 0.00682605, 0.00684432, 0.00685966, 0.00686981, 0.00704506, 0.00730533])

masses_exp = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7100.0, 7200.0, 7200.0, 7100.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0])
xs_exp_limits_1sigma = array('d', [0.335161, 0.324007, 0.321838, 0.286281, 0.244971, 0.197079, 0.180205, 0.161407, 0.133198, 0.123439, 0.111531, 0.0981806, 0.0907468, 0.0797318, 0.0713594, 0.0619089, 0.0561893, 0.0500096, 0.0466732, 0.0440751, 0.0365057, 0.0329189, 0.0314334, 0.0272091, 0.0248765, 0.0215591, 0.0203825, 0.0193157, 0.0167753, 0.0161453, 0.0144415, 0.0138956, 0.0131834, 0.0113471, 0.0106243, 0.00948066, 0.00890732, 0.00886268, 0.00798395, 0.00759016, 0.0071914, 0.00690173, 0.00669298, 0.00640444, 0.00613202, 0.00569241, 0.00544685, 0.00550536, 0.00547637, 0.00539133, 0.00558063, 0.00529489, 0.00523485, 0.00533668, 0.00538193, 0.00545733, 0.00560797, 0.00592521, 0.00967265, 0.00941806, 0.00932741, 0.0092946, 0.00939976, 0.0095617, 0.00969715, 0.00958647, 0.0100849, 0.0103257, 0.0104162, 0.0104984, 0.0113076, 0.0116728, 0.0119872, 0.0138671, 0.0147656, 0.0156666, 0.0170438, 0.0177269, 0.0186168, 0.019711, 0.0222257, 0.0242314, 0.0273703, 0.0284973, 0.031896, 0.0347668, 0.0380603, 0.0399196, 0.0454472, 0.049391, 0.0538697, 0.0570296, 0.0699744, 0.0767439, 0.078204, 0.0886945, 0.103308, 0.120837, 0.127646, 0.145325, 0.161374, 0.180015, 0.204109, 0.245011, 0.282155, 0.331893, 0.368612, 0.424991, 0.493316, 0.590081, 0.666704, 0.819146, 0.949194, 1.29105, 1.60552, 2.11643])
xs_exp_limits_2sigma = array('d', [0.20407, 0.209338, 0.195197, 0.174303, 0.15069, 0.123191, 0.111347, 0.0899456, 0.0885408, 0.0818745, 0.0709853, 0.0642, 0.0604732, 0.0561892, 0.0465196, 0.0422077, 0.0399515, 0.0344268, 0.0330462, 0.0293144, 0.0275114, 0.0242617, 0.0230381, 0.0192778, 0.0174884, 0.0161142, 0.0145942, 0.0138156, 0.0130697, 0.0112503, 0.0107593, 0.0100603, 0.0087881, 0.00825536, 0.00767079, 0.00718252, 0.00678177, 0.00672023, 0.00649652, 0.0064116, 0.00612197, 0.00564294, 0.00557085, 0.00531687, 0.00493033, 0.00458629, 0.00448363, 0.00431258, 0.00431956, 0.00428019, 0.00423466, 0.00422984, 0.00426799, 0.00433075, 0.00442372, 0.00453681, 0.00470056, 0.00494792, 0.0150724, 0.0145872, 0.013956, 0.013989, 0.0140444, 0.0141739, 0.0145428, 0.0136323, 0.0144526, 0.0152436, 0.0154896, 0.0148061, 0.016124, 0.0165779, 0.0164022, 0.0198081, 0.0207638, 0.0223936, 0.0231302, 0.0239143, 0.0268797, 0.0287656, 0.0322244, 0.0365646, 0.039878, 0.0421563, 0.0459401, 0.0502642, 0.0560174, 0.0573951, 0.0650935, 0.0720316, 0.0829751, 0.083066, 0.0944203, 0.109722, 0.109963, 0.126134, 0.142736, 0.16952, 0.184624, 0.215184, 0.23732, 0.263481, 0.335052, 0.358513, 0.432019, 0.501457, 0.541806, 0.63875, 0.750352, 0.921764, 1.0043, 1.25544, 1.56756, 1.91173, 2.38783, 3.80777])

if syst:
  masses = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7100.0, 7200.0])
  xs_obs_limits = array('d', [2.0615, 1.94582, 2.06492, 1.62597, 1.05113, 0.619752, 0.409027, 0.278679, 0.223427, 0.231844, 0.213956, 0.17448, 0.182167, 0.187449, 0.181862, 0.17469, 0.163485, 0.151662, 0.139721, 0.129114, 0.120302, 0.11357, 0.100043, 0.0874448, 0.081939, 0.0751703, 0.0658594, 0.0515029, 0.0351077, 0.0223095, 0.0158919, 0.0128366, 0.0113868, 0.0106171, 0.0108656, 0.0121578, 0.0134528, 0.0142962, 0.0143024, 0.0139918, 0.0132415, 0.0124992, 0.0118243, 0.0110701, 0.0101539, 0.00942484, 0.00875206, 0.00818491, 0.00757354, 0.00701268, 0.0064779, 0.00638241, 0.00611084, 0.00592149, 0.0057839, 0.00583632, 0.00589959, 0.00615538])
  xs_exp_limits = array('d', [2.35524, 1.718395, 1.428665, 1.09346, 0.8535145, 0.6807505, 0.5645625, 0.4462245, 0.3892175, 0.338744, 0.296201, 0.261048, 0.227171, 0.203175, 0.18259, 0.1602235, 0.14302, 0.125324, 0.1061265, 0.09317755, 0.0843383, 0.07174945, 0.064988, 0.05691025, 0.0509401, 0.0453084, 0.04059635, 0.0373627, 0.0317369, 0.0300091, 0.0270188, 0.02477945, 0.0223704, 0.0199402, 0.0187306, 0.01701985, 0.0151752, 0.01351145, 0.01255925, 0.01157715, 0.0106024, 0.009756425, 0.00934829, 0.00875005, 0.00851081, 0.008080615, 0.00765728, 0.007629135, 0.007262815, 0.007117835, 0.007197575, 0.00695401, 0.006931495, 0.00696994, 0.00698784, 0.007031325, 0.007249375, 0.00743711])

  masses_exp = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7100.0, 7200.0, 7200.0, 7100.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0])
  xs_exp_limits_1sigma = array('d', [1.00337116, 0.866955067, 0.752425447, 0.690813204, 0.557126493, 0.452343571, 0.369974379, 0.291965862, 0.254603308, 0.22262009, 0.198962406, 0.180808615, 0.159799945, 0.146661554, 0.128943636, 0.112611294, 0.103093084, 0.0907000155, 0.0771243702, 0.0661439466, 0.0573709982, 0.0508367378, 0.0456360786, 0.0399667206, 0.0339849389, 0.030288527, 0.027896682, 0.0254099014, 0.0226699241, 0.0213114804, 0.0192591892, 0.0175941976, 0.0157615114, 0.013838817, 0.0130338082, 0.0117812166, 0.0108143444, 0.00934186314, 0.00896829673, 0.00828872597, 0.00771801739, 0.00718462537, 0.0067390125, 0.00646815324, 0.00618935429, 0.00586042785, 0.00586463704, 0.00584641849, 0.0057361607, 0.00567584782, 0.00558652705, 0.00553129486, 0.00546272191, 0.00547211088, 0.00548410478, 0.00552754675, 0.00564953595, 0.00584748945, 0.0100845357, 0.00993503261, 0.00981003639, 0.00975574841, 0.00972731409, 0.00989015291, 0.010033865, 0.0103405915, 0.0105689159, 0.0105038322, 0.0112085277, 0.0110980886, 0.0114751799, 0.012443272, 0.0131314737, 0.014051216, 0.0149478967, 0.0156688959, 0.0170780353, 0.0178464862, 0.0191880225, 0.0220464487, 0.0244916478, 0.0271920821, 0.0301781311, 0.0332523471, 0.0363692962, 0.0402007849, 0.0439346766, 0.0482859262, 0.0538109068, 0.0589490221, 0.0640103592, 0.0695765626, 0.0817522438, 0.0935356018, 0.104712428, 0.126824538, 0.135229674, 0.149406551, 0.175783888, 0.198555658, 0.222101061, 0.252941695, 0.304163464, 0.340469463, 0.379226478, 0.425511036, 0.501697685, 0.614025374, 0.685345584, 0.82294336, 0.990558043, 1.26525887, 1.69771927, 2.19449563, 3.04527554, 4.17068182])
  xs_exp_limits_2sigma = array('d', [0.54888898, 0.52204808, 0.474718403, 0.397639556, 0.351394671, 0.302690054, 0.252403694, 0.213393025, 0.189859488, 0.155648801, 0.141244894, 0.131521788, 0.115663227, 0.10740684, 0.0945093062, 0.0815758087, 0.0683574154, 0.0598277833, 0.0521576438, 0.0459937582, 0.0446251456, 0.0395625195, 0.0340091703, 0.0293762369, 0.0231166017, 0.0201350766, 0.0206927148, 0.018663006, 0.0166369141, 0.0154194806, 0.014386231, 0.0122479487, 0.0109092083, 0.0101478307, 0.0098818491, 0.00879845911, 0.00771553858, 0.00757435346, 0.00718372213, 0.00666078628, 0.00646523702, 0.00586224672, 0.0053227103, 0.005199051, 0.00494559699, 0.00471175705, 0.00503444006, 0.00485785365, 0.00479673824, 0.00460783626, 0.00438148375, 0.00444699432, 0.00444588156, 0.00454888576, 0.00460047311, 0.00468674348, 0.00487382335, 0.005121591, 0.0156015531, 0.0149743229, 0.0144452808, 0.0139797751, 0.0140042234, 0.0145114841, 0.0147583004, 0.0147875288, 0.0143771972, 0.014809522, 0.0158853178, 0.0153294932, 0.0162746371, 0.0167309479, 0.0175705089, 0.0192033326, 0.0203578441, 0.021372262, 0.023406303, 0.0251327853, 0.0268561262, 0.0307997795, 0.0346109915, 0.039699849, 0.0429967449, 0.0472399862, 0.0520788044, 0.0574647094, 0.0619649635, 0.0666650444, 0.076035464, 0.0775039182, 0.0875381938, 0.0988259657, 0.114154504, 0.132315214, 0.136144743, 0.170988029, 0.180299121, 0.199779352, 0.221410487, 0.259954698, 0.312874745, 0.362959971, 0.410513564, 0.479408071, 0.519822835, 0.578186354, 0.688012017, 0.841772799, 0.978688174, 1.18332872, 1.29074209, 1.61914179, 2.27758681, 3.17004091, 4.26499675, 5.54217356])

##
########################################################

########################################################
## combine: Asymptotic CLs

masses_CombAsymp = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7100.0, 7200.0])
xs_obs_limits_CombAsymp = array('d', [0.7449, 0.7849, 1.1556, 0.8669, 0.5001, 0.3078, 0.2076, 0.1485, 0.1216, 0.1439, 0.1382, 0.0979, 0.1024, 0.1079, 0.1103, 0.1107, 0.1138, 0.1123, 0.0956, 0.0832, 0.0794, 0.0834, 0.0813, 0.0741, 0.0795, 0.0745, 0.058, 0.0345, 0.0191, 0.0128, 0.0106, 0.0093, 0.0084, 0.0085, 0.0097, 0.0115, 0.0133, 0.0138, 0.0132, 0.0124, 0.0115, 0.0109, 0.0104, 0.0095, 0.0089, 0.0079, 0.0072, 0.0066, 0.0058, 0.0051, 0.0048, 0.0045, 0.0043, 0.0042, 0.0042, 0.004, 0.0043, 0.0044])
xs_exp_limits_CombAsymp = array('d', [0.8477, 0.7051, 0.5918, 0.502, 0.4277, 0.3662, 0.3154, 0.2744, 0.2383, 0.208, 0.1812, 0.1597, 0.1401, 0.1235, 0.1089, 0.0962, 0.0864, 0.0767, 0.0688, 0.062, 0.0552, 0.0493, 0.0444, 0.0405, 0.0356, 0.0327, 0.0298, 0.0278, 0.0259, 0.0239, 0.022, 0.02, 0.0181, 0.0171, 0.0151, 0.0142, 0.0132, 0.0122, 0.0112, 0.0103, 0.0093, 0.0093, 0.0083, 0.0083, 0.0073, 0.0073, 0.0073, 0.0063, 0.0063, 0.0063, 0.0063, 0.0063, 0.0063, 0.0063, 0.0063, 0.0063, 0.0063, 0.0063])

masses_exp_CombAsymp = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7100.0, 7200.0, 7200.0, 7100.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0])
xs_exp_limits_1sigma_CombAsymp = array('d', [0.6156, 0.5121, 0.4284, 0.3616, 0.3096, 0.2655, 0.2291, 0.1972, 0.1725, 0.1495, 0.1311, 0.1147, 0.1009, 0.0887, 0.0782, 0.0697, 0.0616, 0.055, 0.0496, 0.0446, 0.0397, 0.0355, 0.032, 0.0288, 0.0256, 0.0235, 0.0212, 0.0198, 0.0184, 0.017, 0.0157, 0.0143, 0.0132, 0.0122, 0.0111, 0.0096, 0.0092, 0.0086, 0.0074, 0.0069, 0.0068, 0.0062, 0.0059, 0.0053, 0.0053, 0.005, 0.0045, 0.0046, 0.0041, 0.0041, 0.0041, 0.0041, 0.0041, 0.0041, 0.0041, 0.0041, 0.0041, 0.0041, 0.0108, 0.0108, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.0106, 0.0106, 0.0115, 0.0117, 0.0123, 0.0131, 0.0143, 0.0152, 0.0159, 0.0173, 0.0186, 0.02, 0.0224, 0.0244, 0.0264, 0.0286, 0.0314, 0.0335, 0.0362, 0.0389, 0.0417, 0.0455, 0.0507, 0.0564, 0.0625, 0.0694, 0.0776, 0.0862, 0.096, 0.1075, 0.1198, 0.1349, 0.1519, 0.1723, 0.1954, 0.2227, 0.2526, 0.2884, 0.3323, 0.3805, 0.4399, 0.5107, 0.5931, 0.696, 0.8206, 0.9833, 1.1822])
xs_exp_limits_2sigma_CombAsymp = array('d', [0.4619, 0.3842, 0.3202, 0.2716, 0.2314, 0.1988, 0.1719, 0.1485, 0.1289, 0.1125, 0.098, 0.0864, 0.0758, 0.0671, 0.0591, 0.0522, 0.0463, 0.0416, 0.0368, 0.0334, 0.0297, 0.0266, 0.024, 0.0212, 0.0192, 0.0171, 0.0154, 0.0144, 0.0133, 0.0123, 0.0113, 0.0103, 0.0099, 0.0088, 0.008, 0.0075, 0.0062, 0.0057, 0.0056, 0.0054, 0.0049, 0.0043, 0.0044, 0.0039, 0.0041, 0.0032, 0.0032, 0.0036, 0.0028, 0.0028, 0.0028, 0.0028, 0.0028, 0.0028, 0.0028, 0.0028, 0.0028, 0.0028, 0.0164, 0.0158, 0.0155, 0.0149, 0.0149, 0.0149, 0.0149, 0.0144, 0.0144, 0.0149, 0.0149, 0.0153, 0.0153, 0.0159, 0.0172, 0.0175, 0.0183, 0.02, 0.0209, 0.0224, 0.0238, 0.0257, 0.0276, 0.0301, 0.0335, 0.0358, 0.039, 0.0422, 0.0454, 0.0491, 0.0529, 0.0566, 0.0619, 0.0683, 0.076, 0.0843, 0.0936, 0.104, 0.1154, 0.1283, 0.1433, 0.1606, 0.1799, 0.203, 0.2303, 0.2612, 0.2956, 0.3353, 0.3839, 0.4411, 0.5064, 0.5839, 0.6779, 0.7894, 0.9263, 1.0921, 1.3052, 1.5692])

if syst:
  masses_CombAsymp = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7100.0, 7200.0])
  xs_obs_limits_CombAsymp = array('d', [2.7373, 2.0833, 1.8892, 1.5152, 0.9476, 0.6583, 0.504, 0.3836, 0.3019, 0.311, 0.2733, 0.211, 0.1895, 0.1798, 0.1664, 0.1578, 0.1555, 0.1459, 0.1316, 0.1128, 0.1064, 0.1066, 0.1007, 0.1052, 0.0957, 0.09, 0.0848, 0.0804, 0.0424, 0.0234, 0.017, 0.0144, 0.0126, 0.0126, 0.0139, 0.0157, 0.0165, 0.0165, 0.0156, 0.0149, 0.0139, 0.0129, 0.012, 0.0111, 0.0101, 0.0093, 0.0085, 0.0075, 0.0067, 0.0061, 0.0056, 0.0051, 0.0048, 0.0045, 0.0045, 0.0045, 0.0045, 0.0048])
  xs_exp_limits_CombAsymp = array('d', [2.8984, 2.0234, 1.418, 1.0586, 0.8555, 0.7168, 0.6113, 0.5293, 0.4512, 0.3838, 0.3232, 0.2725, 0.2314, 0.1963, 0.1675, 0.145, 0.1274, 0.1118, 0.1001, 0.0894, 0.0796, 0.0718, 0.0649, 0.0581, 0.0522, 0.0474, 0.0435, 0.0396, 0.0356, 0.0327, 0.0298, 0.0269, 0.0239, 0.022, 0.02, 0.0181, 0.0171, 0.0151, 0.0142, 0.0132, 0.0122, 0.0112, 0.0103, 0.0093, 0.0093, 0.0083, 0.0073, 0.0073, 0.0073, 0.0073, 0.0073, 0.0063, 0.0063, 0.0063, 0.0063, 0.0063, 0.0063, 0.0063])

  masses_exp_CombAsymp = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7100.0, 7200.0, 7200.0, 7100.0, 7000.0, 6900.0, 6800.0, 6700.0, 6600.0, 6500.0, 6400.0, 6300.0, 6200.0, 6100.0, 6000.0, 5900.0, 5800.0, 5700.0, 5600.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0])
  xs_exp_limits_1sigma_CombAsymp = array('d', [1.9752, 1.3969, 0.9862, 0.742, 0.5921, 0.5074, 0.4281, 0.3681, 0.3143, 0.2664, 0.226, 0.1907, 0.1629, 0.1384, 0.1185, 0.1026, 0.0903, 0.0792, 0.0704, 0.062, 0.0564, 0.0508, 0.0458, 0.0412, 0.0371, 0.0333, 0.0302, 0.0279, 0.0248, 0.0225, 0.0203, 0.0183, 0.017, 0.0152, 0.0139, 0.0125, 0.0113, 0.0103, 0.0096, 0.0092, 0.0086, 0.0079, 0.0065, 0.0065, 0.0059, 0.0058, 0.0053, 0.005, 0.005, 0.0045, 0.0045, 0.0041, 0.0041, 0.0041, 0.0041, 0.0041, 0.0041, 0.0041, 0.0108, 0.0108, 0.0108, 0.01, 0.01, 0.0108, 0.0108, 0.0106, 0.0106, 0.0115, 0.0115, 0.0125, 0.0128, 0.0137, 0.0143, 0.0152, 0.0166, 0.018, 0.0195, 0.0209, 0.0224, 0.0244, 0.0264, 0.0293, 0.0321, 0.0358, 0.0393, 0.0436, 0.0476, 0.0524, 0.0575, 0.0632, 0.0696, 0.0768, 0.0845, 0.0937, 0.1041, 0.1148, 0.1289, 0.1436, 0.1622, 0.1828, 0.2092, 0.2416, 0.2831, 0.332, 0.393, 0.4688, 0.5567, 0.6544, 0.7677, 0.8916, 1.0339, 1.2408, 1.5438, 2.0567, 2.9671, 4.2271])
  xs_exp_limits_2sigma_CombAsymp = array('d', [1.4832, 1.0394, 0.7228, 0.552, 0.4261, 0.357, 0.3236, 0.2791, 0.2388, 0.2016, 0.1705, 0.1357, 0.1153, 0.1031, 0.0886, 0.0759, 0.0672, 0.059, 0.052, 0.045, 0.042, 0.0379, 0.0322, 0.0304, 0.0273, 0.0248, 0.0227, 0.0195, 0.0187, 0.0171, 0.0154, 0.0138, 0.0123, 0.0106, 0.0097, 0.0088, 0.0083, 0.008, 0.0075, 0.0062, 0.0057, 0.0053, 0.0048, 0.0043, 0.0043, 0.0039, 0.0041, 0.0032, 0.0032, 0.0032, 0.0032, 0.0028, 0.0028, 0.0028, 0.0028, 0.0028, 0.0028, 0.0028, 0.0174, 0.0169, 0.0164, 0.0161, 0.0161, 0.0158, 0.0164, 0.0161, 0.0168, 0.0172, 0.0172, 0.0177, 0.0186, 0.0196, 0.0208, 0.0224, 0.024, 0.0255, 0.0275, 0.0296, 0.0324, 0.0352, 0.0376, 0.0416, 0.0454, 0.0505, 0.0555, 0.0608, 0.0674, 0.0738, 0.0815, 0.0888, 0.0978, 0.1079, 0.1187, 0.1306, 0.1456, 0.161, 0.1785, 0.2007, 0.2254, 0.254, 0.2898, 0.3367, 0.3922, 0.4613, 0.5478, 0.6516, 0.7736, 0.9095, 1.0669, 1.243, 1.4412, 1.7244, 2.1524, 2.8759, 4.1245, 5.8575])

##
########################################################

########################################################
## combine: MarkovChainMC

masses_CombMCMC = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7100.0, 7200.0])
xs_obs_limits_CombMCMC = array('d', [0.751035, 0.783702, 1.14963, 0.878045, 0.503669, 0.313853, 0.211132, 0.147798, 0.122191, 0.145008, 0.141436, 0.0974039, 0.104525, 0.109255, 0.112641, 0.112392, 0.11405, 0.112942, 0.0961905, 0.0836343, 0.0802681, 0.0835868, 0.0820558, 0.0744672, 0.0807575, 0.0754567, 0.0587551, 0.035105, 0.0199626, 0.0134236, 0.0106007, 0.00964166, 0.00863568, 0.00889175, 0.00988992, 0.0121566, 0.0136762, 0.0142148, 0.0138457, 0.0128969, 0.0122641, 0.0115865, 0.0110576, 0.010214, 0.00933754, 0.00851132, 0.00795462, 0.00737235, 0.00668158, 0.00603532, 0.00556866, 0.00518384, 0.00504214, 0.0049919, 0.00499631, 0.00501995, 0.00517891, 0.00539366])

if syst:
  masses_CombMCMC = array('d', [1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0, 7100.0, 7200.0])
  xs_obs_limits_CombMCMC = array('d', [2.07002, 1.90716, 1.80469, 1.43738, 0.901725, 0.66037, 0.512756, 0.392596, 0.301149, 0.30589, 0.259986, 0.225306, 0.186157, 0.179733, 0.165478, 0.160213, 0.154167, 0.142423, 0.131745, 0.114348, 0.110072, 0.107836, 0.104925, 0.0979774, 0.0946883, 0.0900864, 0.082626, 0.0764426, 0.0479142, 0.0266316, 0.0184438, 0.0149462, 0.0136117, 0.0137737, 0.0146327, 0.0150568, 0.0160556, 0.0166271, 0.016209, 0.0158396, 0.0143309, 0.0135257, 0.0125729, 0.0117703, 0.0107313, 0.0102247, 0.00951226, 0.00880574, 0.00806844, 0.00750245, 0.00674577, 0.00633249, 0.00610255, 0.00578861, 0.00580343, 0.00593024, 0.00590552, 0.00606031])

##
########################################################

########################################################
## theta: MarkovChainMC

masses_thetaMCMC = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
xs_obs_limits_thetaMCMC = array('d', [6.2269, 18.781, 13.662, 3.4098, 3.1396, 1.6562, 1.1102, 1.3278, 1.7876, 1.612, 1.4438, 1.7162, 2.4846, 2.1355, 1.3503, 1.0895, 1.263, 1.2898, 1.1607, 0.93982, 0.6759, 0.5722, 0.44056, 0.34601, 0.30556, 0.26955, 0.23851, 0.2377, 0.24642, 0.2339, 0.21792, 0.19438, 0.18922, 0.19268, 0.20508, 0.20743, 0.21131, 0.20795, 0.20817, 0.19964, 0.19192, 0.18457, 0.18131, 0.17388, 0.1717, 0.16531, 0.16541, 0.16201, 0.16319, 0.16508, 0.16793, 0.16827, 0.17154, 0.173, 0.18067, 0.18415, 0.18248, 0.19263])

if syst:
  masses_thetaMCMC = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5600.0, 5700.0, 5800.0, 5900.0, 6000.0, 6100.0, 6200.0, 6300.0, 6400.0, 6500.0, 6600.0, 6700.0, 6800.0, 6900.0, 7000.0])
  xs_obs_limits_thetaMCMC = array('d', [7.2602, 18.83, 15.675, 4.2641, 3.3888, 2.0017, 1.2978, 1.4139, 1.6849, 1.7134, 1.5324, 1.8205, 2.4656, 2.2656, 1.7922, 1.2457, 1.2721, 1.3011, 1.228, 1.0291, 0.92066, 0.69318, 0.57855, 0.39978, 0.34339, 0.30034, 0.25985, 0.25033, 0.23649, 0.24412, 0.21968, 0.20456, 0.20431, 0.19794, 0.20403, 0.20522, 0.2103, 0.20741, 0.19805, 0.20375, 0.1995, 0.19984, 0.18678, 0.19322, 0.18199, 0.17408, 0.16358, 0.17355, 0.16295, 0.17491, 0.17533, 0.17592, 0.17942, 0.18207, 0.19391, 0.19059, 0.19457, 0.20715])

##
########################################################

graph_exp_2sigma = TGraph(len(masses_exp),masses_exp,xs_exp_limits_2sigma)
graph_exp_2sigma.SetFillColor(kYellow)
graph_exp_2sigma.GetXaxis().SetTitle("gg resonance mass [GeV]")
graph_exp_2sigma.GetYaxis().SetTitle("#sigma #it{B} #it{A} [pb]")
graph_exp_2sigma.GetYaxis().SetTitleOffset(1.1)
graph_exp_2sigma.GetYaxis().SetRangeUser(1e-03,1e+02)
#graph_exp_2sigma.GetXaxis().SetNdivisions(1005)

graph_exp_1sigma = TGraph(len(masses_exp),masses_exp,xs_exp_limits_1sigma)
graph_exp_1sigma.SetFillColor(kGreen+1)

graph_exp = TGraph(len(masses),masses,xs_exp_limits)
#graph_exp.SetMarkerStyle(24)
graph_exp.SetLineWidth(3)
graph_exp.SetLineStyle(2)
graph_exp.SetLineColor(4)

graph_obs = TGraph(len(masses),masses,xs_obs_limits)
graph_obs.SetMarkerStyle(20)
graph_obs.SetLineWidth(2)
#graph_obs.SetLineStyle(1)
graph_obs.SetLineColor(1)

graph_exp_2sigma_CombAsymp = TGraph(len(masses_exp_CombAsymp),masses_exp_CombAsymp,xs_exp_limits_2sigma_CombAsymp)
graph_exp_2sigma_CombAsymp.SetFillColor(kViolet)
graph_exp_2sigma_CombAsymp.SetFillStyle(3002)

graph_exp_1sigma_CombAsymp = TGraph(len(masses_exp_CombAsymp),masses_exp_CombAsymp,xs_exp_limits_1sigma_CombAsymp)
graph_exp_1sigma_CombAsymp.SetFillColor(kRed+1)
graph_exp_1sigma_CombAsymp.SetFillStyle(3244)

graph_exp_CombAsymp = TGraph(len(masses_CombAsymp),masses_CombAsymp,xs_exp_limits_CombAsymp)
graph_exp_CombAsymp.SetLineWidth(2)
graph_exp_CombAsymp.SetLineStyle(2)
graph_exp_CombAsymp.SetLineColor(kSpring+7)

graph_obs_CombAsymp = TGraph(len(masses_CombAsymp),masses_CombAsymp,xs_obs_limits_CombAsymp)
graph_obs_CombAsymp.SetMarkerStyle(22)
graph_obs_CombAsymp.SetMarkerColor(kRed)
graph_obs_CombAsymp.SetLineWidth(2)
graph_obs_CombAsymp.SetLineStyle(2)
graph_obs_CombAsymp.SetLineColor(kRed)

graph_obs_CombMCMC = TGraph(len(masses_CombMCMC),masses_CombMCMC,xs_obs_limits_CombMCMC)
graph_obs_CombMCMC.SetMarkerStyle(27)
graph_obs_CombMCMC.SetMarkerSize(1.5)
graph_obs_CombMCMC.SetMarkerColor(7)
graph_obs_CombMCMC.SetLineWidth(2)
graph_obs_CombMCMC.SetLineStyle(3)
graph_obs_CombMCMC.SetLineColor(7)

#graph_obs_thetaMCMC = TGraph(len(masses_thetaMCMC),masses_thetaMCMC,xs_obs_limits_thetaMCMC)
#graph_obs_thetaMCMC.SetMarkerStyle(32)
##graph_obs_thetaMCMC.SetMarkerSize(1.5)
#graph_obs_thetaMCMC.SetMarkerColor(6)
#graph_obs_thetaMCMC.SetLineWidth(2)
#graph_obs_thetaMCMC.SetLineStyle(4)
#graph_obs_thetaMCMC.SetLineColor(6)

c = TCanvas("c", "",800,800)
c.cd()

graph_exp_2sigma.Draw("AF")
graph_exp_1sigma.Draw("F")
#graph_exp_2sigma_CombAsymp.Draw("F")
#graph_exp_1sigma_CombAsymp.Draw("F")
graph_exp.Draw("L")
graph_obs.Draw("LP")
#graph_exp_CombAsymp.Draw("L")
graph_obs_CombAsymp.Draw("LP")
graph_obs_CombMCMC.Draw("LP")
#graph_obs_thetaMCMC.Draw("LP")


legend = TLegend(.60,.77,.90,.92)
legend.SetBorderSize(0)
legend.SetFillColor(0)
legend.SetFillStyle(0)
legend.SetTextFont(42)
legend.SetTextSize(0.03)
legend.SetHeader('95% CL upper limits')
legend.AddEntry(graph_obs,"Observed","lp")
legend.AddEntry(graph_exp,"Expected","lp")
legend.AddEntry(graph_exp_1sigma,"#pm 1#sigma","F")
legend.AddEntry(graph_exp_2sigma,"#pm 2#sigma","F")
legend.Draw()

legend_CombAsymp = TLegend(.60,.68,.90,.75)
legend_CombAsymp.SetBorderSize(0)
legend_CombAsymp.SetFillColor(0)
legend_CombAsymp.SetFillStyle(0)
legend_CombAsymp.SetTextFont(42)
legend_CombAsymp.SetTextSize(0.03)
legend_CombAsymp.SetHeader('combine: Asymptotic CL_{S}')
legend_CombAsymp.AddEntry(graph_obs_CombAsymp,"Observed","lp")
#legend_CombAsymp.AddEntry(graph_exp_CombAsymp,"Expected","lp")
#legend_CombAsymp.AddEntry(graph_exp_1sigma_CombAsymp,"#pm 1#sigma","F")
#legend_CombAsymp.AddEntry(graph_exp_2sigma_CombAsymp,"#pm 2#sigma","F")
legend_CombAsymp.Draw()

legend_CombMCMC = TLegend(.60,.59,.90,.66)
legend_CombMCMC.SetBorderSize(0)
legend_CombMCMC.SetFillColor(0)
legend_CombMCMC.SetFillStyle(0)
legend_CombMCMC.SetTextFont(42)
legend_CombMCMC.SetTextSize(0.03)
legend_CombMCMC.SetHeader('combine: Bayesian')
legend_CombMCMC.AddEntry(graph_obs_CombMCMC,"Observed","lp")
legend_CombMCMC.Draw()

#legend_thetaMCMC = TLegend(.60,.50,.90,.57)
#legend_thetaMCMC.SetBorderSize(0)
#legend_thetaMCMC.SetFillColor(0)
#legend_thetaMCMC.SetFillStyle(0)
#legend_thetaMCMC.SetTextFont(42)
#legend_thetaMCMC.SetTextSize(0.03)
#legend_thetaMCMC.SetHeader('theta: Bayesian')
#legend_thetaMCMC.AddEntry(graph_obs_thetaMCMC,"Observed","lp")
#legend_thetaMCMC.Draw()

#l1 = TLatex()
#l1.SetTextAlign(12)
#l1.SetTextFont(42)
#l1.SetNDC()
#l1.SetTextSize(0.04)
#l1.SetTextSize(0.04)
#l1.DrawLatex(0.18,0.40, "CMS Preliminary")
#l1.DrawLatex(0.18,0.32, "#intLdt = 1 fb^{-1}")
#l1.DrawLatex(0.19,0.27, "#sqrt{s} = 13 TeV")

#draw the lumi text on the canvas
CMS_lumi.extraText = "Preliminary"
CMS_lumi.lumi_sqrtS = "2.4 fb^{-1} (13 TeV)" # used with iPeriod = 0, e.g. for simulation-only plots (default is an empty string)
iPos = 11
iPeriod = 0

CMS_lumi.CMS_lumi(c, iPeriod, iPos)

gPad.RedrawAxis()

c.SetLogy()
c.SaveAs('xs_limit_Comparison_gg' + ('_NoSyst' if not syst else '') + '_Run2_13TeV_DATA_2445_invpb.eps')
