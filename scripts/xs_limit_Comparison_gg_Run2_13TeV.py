#!/usr/bin/env python

import sys, os, subprocess, string, re
from ROOT import *
from array import array
import CMS_lumi


gROOT.SetBatch(kTRUE);
gStyle.SetOptStat(0)
gStyle.SetOptTitle(0)
gStyle.SetTitleFont(42, "XYZ")
gStyle.SetTitleSize(0.06, "XYZ")
gStyle.SetLabelFont(42, "XYZ")
gStyle.SetLabelSize(0.05, "XYZ")
gStyle.SetCanvasBorderMode(0)
gStyle.SetFrameBorderMode(0)
gStyle.SetCanvasColor(kWhite)
gStyle.SetPadTickX(1)
gStyle.SetPadTickY(1)
gStyle.SetPadLeftMargin(0.15)
gStyle.SetPadRightMargin(0.05)
gStyle.SetPadTopMargin(0.05)
gStyle.SetPadBottomMargin(0.15)
gROOT.ForceStyle()

masses = array('d')
xs_obs_limits = array('d')
xs_exp_limits = array('d')
masses_exp = array('d')
xs_exp_limits_1sigma = array('d')
xs_exp_limits_1sigma_up = array('d')
xs_exp_limits_2sigma = array('d')
xs_exp_limits_2sigma_up = array('d')

syst = True
#syst = False

########################################################
## DijetLimitCode

masses = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0])
xs_obs_limits = array('d', [5.90412, 24.8042, 18.3176, 7.17719, 4.19916, 1.98404, 1.19833, 1.46079, 1.71165, 1.33612, 1.17315, 1.14401, 1.44153, 1.62837, 1.36941, 1.34004, 1.42824, 1.44795, 1.35705, 1.10115, 0.828976, 0.660172, 0.458337, 0.385381, 0.355388, 0.332631, 0.310094, 0.302969, 0.293327, 0.274843, 0.254422, 0.234144, 0.222194, 0.228776, 0.234352, 0.238696, 0.237315, 0.233928, 0.230453, 0.230717, 0.223965, 0.216521, 0.210162])
xs_exp_limits = array('d', [9.79282, 7.62507, 6.703235, 5.51467, 4.74207, 3.671345, 3.194125, 2.82396, 2.235, 2.025325, 1.747005, 1.608285, 1.37957, 1.14505, 1.008255, 0.8711925, 0.8048135, 0.7139645, 0.6407455, 0.58749, 0.5356085, 0.507517, 0.474179, 0.4520175, 0.4212405, 0.400004, 0.3629105, 0.3306745, 0.2973345, 0.2781095, 0.263274, 0.2599575, 0.2412745, 0.222197, 0.2122655, 0.2033305, 0.188874, 0.186582, 0.18188, 0.171405, 0.1658715, 0.169089, 0.1615145])

masses_exp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0, 1400.0, 1300.0])
xs_exp_limits_1sigma = array('d', [4.25269701, 3.5814807, 3.12437044, 2.87295598, 2.524546, 2.25136398, 1.94684076, 1.75983907, 1.45069696, 1.37914387, 1.18551872, 1.06788417, 0.919481943, 0.778911719, 0.655908731, 0.616409289, 0.545025364, 0.504277479, 0.458636845, 0.430695501, 0.405511081, 0.369503799, 0.343968719, 0.325385351, 0.296381838, 0.27495425, 0.255083737, 0.246075969, 0.229335582, 0.220690087, 0.21055097, 0.202712537, 0.193381576, 0.1849071, 0.161190497, 0.156253169, 0.150726081, 0.151102573, 0.148482896, 0.142830458, 0.141133437, 0.1414601, 0.139885441, 0.214788948, 0.222304556, 0.22769444, 0.22653568, 0.245063735, 0.25124408, 0.258628903, 0.269333267, 0.283539933, 0.323472124, 0.346914222, 0.366784086, 0.385603267, 0.401571736, 0.432047538, 0.476397509, 0.513771899, 0.562343783, 0.617472894, 0.69430656, 0.739033163, 0.780014976, 0.848377924, 0.93703286, 0.954776487, 1.06456712, 1.21852308, 1.42441245, 1.61429439, 1.91318415, 2.10268397, 2.52811108, 3.02916001, 3.26131476, 3.84564242, 4.81602732, 5.49044447, 6.43498751, 8.67315715, 10.7377752, 13.4014049, 15.7384751, 21.7225561])
xs_exp_limits_2sigma = array('d', [2.5722479, 2.2851025, 1.95863055, 1.68005806, 1.54218572, 1.4140722, 1.30817114, 1.13901616, 0.976131144, 0.960673715, 0.91121753, 0.777026061, 0.608712259, 0.543462454, 0.49370271, 0.47831404, 0.435547004, 0.414351898, 0.396581195, 0.348773331, 0.328403935, 0.305661154, 0.277716293, 0.261595371, 0.246864899, 0.239033684, 0.219345929, 0.210573487, 0.183215142, 0.171339318, 0.171534889, 0.155856939, 0.153927138, 0.15140098, 0.142513697, 0.13759286, 0.134954175, 0.13348332, 0.131868257, 0.130153194, 0.131165257, 0.130454527, 0.129498781, 0.287066032, 0.29774787, 0.314671997, 0.306965212, 0.328498813, 0.343953141, 0.353773202, 0.361704286, 0.376417367, 0.452584538, 0.469860758, 0.508702085, 0.521346451, 0.570153744, 0.613432555, 0.666742248, 0.72248531, 0.808388934, 0.87628648, 0.948912422, 1.02316046, 1.14984979, 1.22707052, 1.25639907, 1.43007469, 1.68651432, 1.77035394, 2.19060321, 2.63146467, 2.9343295, 3.27797507, 3.81838354, 4.25540585, 4.82752339, 5.78027958, 6.97663754, 8.68026272, 10.6078858, 13.0445512, 15.7489113, 18.9823185, 24.5480007, 34.1899871])

if syst:
  masses = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0])
  xs_obs_limits = array('d', [6.5388, 25.3099, 21.3927, 9.40168, 4.96007, 2.29408, 1.38732, 1.50147, 1.68523, 1.40833, 1.24679, 1.21808, 1.42811, 1.59275, 1.44016, 1.42188, 1.47216, 1.4937, 1.43758, 1.26953, 1.06583, 0.906498, 0.659773, 0.504959, 0.436788, 0.379415, 0.337783, 0.318595, 0.302804, 0.287377, 0.268775, 0.244895, 0.232776, 0.241318, 0.239077, 0.238428, 0.23798, 0.235695, 0.233228, 0.232629, 0.226054, 0.222463, 0.216499])
  xs_exp_limits = array('d', [10.0367, 7.655415, 6.584175, 5.5488, 4.62124, 4.14456, 3.76115, 3.07871, 2.65414, 2.317055, 2.047445, 1.795945, 1.57297, 1.33652, 1.14401, 1.00681, 0.938574, 0.8439625, 0.727921, 0.683078, 0.617896, 0.5927655, 0.546331, 0.511499, 0.4521155, 0.4194385, 0.3840845, 0.3620595, 0.322148, 0.3009535, 0.2935945, 0.2854585, 0.273496, 0.2426835, 0.220393, 0.213165, 0.199981, 0.194173, 0.189593, 0.1799155, 0.174718, 0.172585, 0.164677])

  masses_exp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0, 1400.0, 1300.0])
  xs_exp_limits_1sigma = array('d', [5.00694924, 3.69544881, 3.36520391, 3.06477088, 2.60730294, 2.45077444, 2.22643462, 1.92165832, 1.70419968, 1.5256961, 1.32510548, 1.16700595, 1.04371948, 0.857683948, 0.760721308, 0.700839992, 0.623124684, 0.605864663, 0.540834402, 0.494476778, 0.457070137, 0.407260297, 0.390568961, 0.363424486, 0.333222171, 0.304065655, 0.282319439, 0.269429114, 0.245884904, 0.233522348, 0.221294027, 0.213882609, 0.207042758, 0.187732261, 0.166617816, 0.163322872, 0.158007969, 0.15496617, 0.151804963, 0.146959174, 0.143744926, 0.144222945, 0.141113813, 0.218529834, 0.226339109, 0.240077182, 0.245245202, 0.259811091, 0.270414612, 0.280118132, 0.294368724, 0.311511448, 0.33919149, 0.3783383, 0.404890193, 0.416130745, 0.422772566, 0.45456063, 0.510637218, 0.541158074, 0.594206855, 0.652433755, 0.773730442, 0.780183167, 0.850731717, 0.947092726, 1.00264412, 1.07141514, 1.22008592, 1.4092104, 1.58760984, 1.83987232, 2.10447726, 2.38191602, 2.91680625, 3.27501796, 3.73505286, 4.22755648, 5.02740885, 5.85121618, 6.85456188, 9.1299558, 10.7618088, 13.2240972, 15.218662, 19.9517756])
  xs_exp_limits_2sigma = array('d', [2.98869941, 2.5247419, 2.2350229, 1.88388024, 1.77369824, 1.595637, 1.497473, 1.34306436, 1.220122, 1.03785578, 0.898167293, 0.867067565, 0.713178576, 0.602401562, 0.544852444, 0.509533032, 0.472183924, 0.441762896, 0.420956127, 0.379053628, 0.369621233, 0.338672517, 0.322098868, 0.288520962, 0.268057913, 0.248870815, 0.233230343, 0.22217494, 0.189642302, 0.182107124, 0.176629553, 0.16315061, 0.160255962, 0.150677297, 0.142521556, 0.139115798, 0.1374949, 0.133595188, 0.133826982, 0.131541732, 0.131691623, 0.129393856, 0.12825799, 0.301250733, 0.314797001, 0.337061795, 0.334089845, 0.353311585, 0.364530621, 0.384834561, 0.38959623, 0.439910716, 0.477982365, 0.567150067, 0.601072105, 0.576770517, 0.628173094, 0.663930452, 0.740854198, 0.802932519, 0.86640174, 0.929986665, 1.05396016, 1.06295319, 1.25658882, 1.44540071, 1.3856858, 1.52291287, 1.71445802, 2.05304602, 2.29123416, 2.7300816, 3.40691982, 3.46011142, 4.33784829, 4.89352042, 5.53895713, 6.47243132, 7.33632668, 8.68559658, 10.2299192, 13.5078942, 16.5231688, 19.8060837, 23.7110938, 32.3846684])

##
########################################################

########################################################
## combine: Asymptotic CLs

masses_CombAsymp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0])
xs_obs_limits_CombAsymp = array('d', [18.4151, 32.3108, 25.1751, 12.7401, 7.3193, 4.4307, 2.6236, 2.6598, 2.7046, 2.113, 1.7418, 1.7567, 2.2734, 2.2993, 1.7451, 1.4765, 1.5544, 1.5933, 1.5164, 1.3153, 1.037, 0.9081, 0.6685, 0.5207, 0.4251, 0.3642, 0.3162, 0.2993, 0.2891, 0.2677, 0.2489, 0.2281, 0.2174, 0.2105, 0.212, 0.2155, 0.2123, 0.2075, 0.2037, 0.1969, 0.1894, 0.1805, 0.1733])
xs_exp_limits_CombAsymp = array('d', [25.375, 18.3125, 14.9062, 11.6562, 8.7812, 6.6562, 5.2344, 4.2344, 3.5156, 2.9766, 2.5703, 2.2422, 1.9766, 1.7266, 1.5273, 1.3398, 1.1758, 1.0352, 0.9102, 0.8086, 0.7129, 0.6348, 0.5645, 0.502, 0.4512, 0.4043, 0.3662, 0.333, 0.3057, 0.2803, 0.2588, 0.2412, 0.2236, 0.21, 0.1963, 0.186, 0.1753, 0.1665, 0.1606, 0.1548, 0.1499, 0.145, 0.1411])

masses_exp_CombAsymp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0, 1400.0, 1300.0])
xs_exp_limits_1sigma_CombAsymp = array('d', [18.3986, 13.2993, 10.8255, 8.4238, 6.367, 4.834, 3.761, 3.0323, 2.5176, 2.1316, 1.8345, 1.5976, 1.4, 1.2281, 1.0828, 0.9499, 0.8335, 0.7275, 0.6431, 0.5663, 0.4993, 0.4415, 0.3912, 0.3479, 0.3087, 0.2773, 0.2488, 0.2246, 0.2034, 0.1858, 0.1703, 0.1575, 0.1455, 0.1346, 0.1251, 0.117, 0.1094, 0.1031, 0.0986, 0.0939, 0.0902, 0.0869, 0.0841, 0.2412, 0.2479, 0.2539, 0.2597, 0.2669, 0.2767, 0.2885, 0.3032, 0.3199, 0.3355, 0.3573, 0.3787, 0.4042, 0.4344, 0.4677, 0.5069, 0.5516, 0.6057, 0.6688, 0.74, 0.8232, 0.9207, 1.034, 1.1664, 1.3129, 1.4849, 1.6866, 1.922, 2.1788, 2.463, 2.7881, 3.1806, 3.6256, 4.1986, 4.931, 5.9053, 7.3, 9.2829, 12.2465, 16.1631, 20.6697, 25.393, 35.1861])
xs_exp_limits_2sigma_CombAsymp = array('d', [13.7778, 9.9789, 8.1227, 6.3517, 4.7679, 3.6271, 2.8319, 2.2743, 1.8883, 1.5987, 1.3705, 1.1912, 1.0423, 0.9139, 0.8025, 0.7039, 0.6177, 0.5398, 0.4746, 0.4185, 0.369, 0.3236, 0.2855, 0.2539, 0.2247, 0.1998, 0.1795, 0.1607, 0.1451, 0.1319, 0.1198, 0.1098, 0.1009, 0.0931, 0.0859, 0.0796, 0.0743, 0.0693, 0.0656, 0.0626, 0.0594, 0.0569, 0.0543, 0.3924, 0.3972, 0.4069, 0.4163, 0.4245, 0.4363, 0.4509, 0.4734, 0.4909, 0.5177, 0.5414, 0.5755, 0.6046, 0.645, 0.6896, 0.742, 0.7997, 0.8713, 0.9517, 1.0503, 1.1616, 1.2874, 1.437, 1.6056, 1.8073, 2.037, 2.3138, 2.6198, 2.9782, 3.3666, 3.8076, 4.3031, 4.9187, 5.6582, 6.6183, 7.8931, 9.7572, 12.4076, 16.2558, 21.5108, 27.3158, 33.5578, 46.4999])

if syst:
  masses_CombAsymp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0])
  xs_obs_limits_CombAsymp = array('d', [34.8074, 36.3617, 34.8967, 23.0516, 12.0215, 8.0603, 3.5815, 2.845, 2.9272, 2.5283, 1.9215, 2.485, 2.489, 2.4117, 2.5215, 1.8416, 1.7617, 1.6491, 1.6063, 1.4965, 1.8175, 1.2974, 1.2191, 0.7824, 0.5398, 0.4279, 0.3662, 0.3224, 0.3027, 0.2811, 0.2608, 0.2408, 0.225, 0.2287, 0.2259, 0.2198, 0.2163, 0.2124, 0.2092, 0.2043, 0.2031, 0.2005, 0.1922])
  xs_exp_limits_CombAsymp = array('d', [37.125, 21.5625, 17.3125, 13.8125, 10.4688, 7.8438, 6.0469, 4.7969, 3.9531, 3.3281, 2.8516, 2.4844, 2.1797, 1.9297, 1.6953, 1.4961, 1.3164, 1.1602, 1.0273, 0.9062, 0.8008, 0.709, 0.627, 0.5586, 0.498, 0.4473, 0.4004, 0.3623, 0.3311, 0.3037, 0.2783, 0.2568, 0.2393, 0.2217, 0.208, 0.1953, 0.1841, 0.1733, 0.1665, 0.1602, 0.1548, 0.1499, 0.145])

  masses_exp_CombAsymp = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0, 5500.0, 5400.0, 5300.0, 5200.0, 5100.0, 5000.0, 4900.0, 4800.0, 4700.0, 4600.0, 4500.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0, 1400.0, 1300.0])
  xs_exp_limits_1sigma_CombAsymp = array('d', [23.8549, 14.5437, 11.7197, 9.3164, 7.0611, 5.3002, 4.0934, 3.259, 2.6858, 2.2562, 1.9387, 1.683, 1.4722, 1.2986, 1.1408, 1.0031, 0.8826, 0.7749, 0.6849, 0.6031, 0.5329, 0.47, 0.4157, 0.369, 0.329, 0.2924, 0.2625, 0.2358, 0.2139, 0.1949, 0.1785, 0.1635, 0.1505, 0.1389, 0.1293, 0.1209, 0.1126, 0.1064, 0.101, 0.0963, 0.0923, 0.089, 0.0857, 0.2525, 0.2587, 0.2671, 0.2738, 0.2846, 0.2936, 0.3088, 0.3245, 0.3456, 0.3648, 0.3899, 0.4186, 0.4492, 0.4853, 0.525, 0.5717, 0.6286, 0.6951, 0.77, 0.8592, 0.9643, 1.0792, 1.2189, 1.3795, 1.5556, 1.7567, 2.0038, 2.2654, 2.567, 2.9065, 3.2831, 3.7222, 4.2724, 4.9598, 5.8598, 7.1487, 9.0116, 11.6894, 15.6014, 20.5845, 25.6625, 31.9623, 56.5106])
  xs_exp_limits_2sigma_CombAsymp = array('d', [16.0247, 10.4022, 8.4196, 6.6635, 5.0504, 3.7993, 2.9408, 2.3516, 1.938, 1.6446, 1.4091, 1.2179, 1.0686, 0.9385, 0.8245, 0.7217, 0.6351, 0.5552, 0.4896, 0.4301, 0.3801, 0.3337, 0.2951, 0.2607, 0.2325, 0.207, 0.1838, 0.1649, 0.1494, 0.1358, 0.1234, 0.1129, 0.1033, 0.0948, 0.0873, 0.0813, 0.0759, 0.0708, 0.0667, 0.0635, 0.0602, 0.0577, 0.0552, 0.4189, 0.4296, 0.4373, 0.4487, 0.463, 0.4778, 0.499, 0.5203, 0.5496, 0.5774, 0.6089, 0.6479, 0.6943, 0.7421, 0.7997, 0.8657, 0.9461, 1.0354, 1.1452, 1.2625, 1.4096, 1.5755, 1.7652, 1.9977, 2.2479, 2.5385, 2.9019, 3.2914, 3.7297, 4.1906, 4.7335, 5.354, 6.1109, 7.0361, 8.3386, 10.0832, 12.7107, 16.4878, 22.0056, 29.0343, 36.0971, 44.9584, 80.0761])

##
########################################################

########################################################
## combine: MarkovChainMC

masses_CombMCMC = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0])
xs_obs_limits_CombMCMC = array('d', [14.3502, 31.9234, 24.8055, 12.7603, 7.66498, 3.62875, 2.18828, 2.49261, 2.64125, 2.1658, 1.75744, 1.73061, 2.41876, 2.47435, 1.87912, 1.62021, 1.66967, 1.68117, 1.57719, 1.36615, 1.09467, 0.989332, 0.749618, 0.59397, 0.484609, 0.413452, 0.345035, 0.334845, 0.328899, 0.305137, 0.29346, 0.268606, 0.257354, 0.258833, 0.251724, 0.231475, 0.234162, 0.236824, 0.231122, 0.19337, 0.189057, 0.172794, 0.167231])

if syst:
  masses_CombMCMC = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0])
  xs_obs_limits_CombMCMC = array('d', [16.9689, 32.0183, 30.3747, 18.3657, 8.68277, 4.20151, 2.04206, 2.42399, 2.45549, 2.21838, 1.5884, 1.83739, 2.35579, 2.31519, 2.3361, 1.67365, 1.69443, 1.6188, 1.61627, 1.46516, 1.66179, 1.24221, 1.1487, 0.781224, 0.599906, 0.436467, 0.353353, 0.348937, 0.32151, 0.321316, 0.307274, 0.280059, 0.264609, 0.262064, 0.240117, 0.216739, 0.219418, 0.225787, 0.22656, 0.204183, 0.204408, 0.190765, 0.177346])

##
########################################################

########################################################
## theta: MarkovChainMC

masses_thetaMCMC = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0])
xs_obs_limits_thetaMCMC = array('d', [4.3461, 23.667, 18.11, 6.3837, 4.4136, 1.8574, 1.149, 1.4049, 1.642, 1.2293, 1.0077, 1.1031, 1.6312, 1.7657, 1.2464, 1.0064, 1.1793, 1.3483, 1.3484, 1.1893, 0.89939, 0.78126, 0.54497, 0.43675, 0.37103, 0.32286, 0.28167, 0.27998, 0.28649, 0.26377, 0.2539, 0.23425, 0.222, 0.22688, 0.23458, 0.23404, 0.23808, 0.23512, 0.23259, 0.22484, 0.21782, 0.20723, 0.2036])

if syst:
  masses_thetaMCMC = array('d', [1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0, 5000.0, 5100.0, 5200.0, 5300.0, 5400.0, 5500.0])
  xs_obs_limits_thetaMCMC = array('d', [5.2142, 23.716, 21.186, 7.9565, 5.0051, 2.4126, 1.3427, 1.4277, 1.6706, 1.4247, 1.0988, 1.1792, 1.5546, 1.653, 1.4793, 1.1218, 1.222, 1.3144, 1.344, 1.2938, 1.1509, 0.91809, 0.74103, 0.52769, 0.42882, 0.36678, 0.3207, 0.29445, 0.28952, 0.27673, 0.26818, 0.24179, 0.23331, 0.24105, 0.23088, 0.23377, 0.22961, 0.2288, 0.24174, 0.22889, 0.23297, 0.23315, 0.21477])

##
########################################################

graph_exp_2sigma = TGraph(len(masses_exp),masses_exp,xs_exp_limits_2sigma)
graph_exp_2sigma.SetFillColor(kYellow)
graph_exp_2sigma.GetXaxis().SetTitle("gg resonance mass [GeV]")
graph_exp_2sigma.GetYaxis().SetTitle("#sigma#timesBR(X#rightarrowjj)#timesA [pb]")
graph_exp_2sigma.GetYaxis().SetRangeUser(1e-02,1e+03)
#graph_exp_2sigma.GetXaxis().SetNdivisions(1005)

graph_exp_1sigma = TGraph(len(masses_exp),masses_exp,xs_exp_limits_1sigma)
graph_exp_1sigma.SetFillColor(kGreen+1)

graph_exp = TGraph(len(masses),masses,xs_exp_limits)
#graph_exp.SetMarkerStyle(24)
graph_exp.SetLineWidth(3)
graph_exp.SetLineStyle(2)
graph_exp.SetLineColor(4)

graph_obs = TGraph(len(masses),masses,xs_obs_limits)
graph_obs.SetMarkerStyle(20)
graph_obs.SetLineWidth(2)
#graph_obs.SetLineStyle(1)
graph_obs.SetLineColor(1)

graph_exp_2sigma_CombAsymp = TGraph(len(masses_exp_CombAsymp),masses_exp_CombAsymp,xs_exp_limits_2sigma_CombAsymp)
graph_exp_2sigma_CombAsymp.SetFillColor(kViolet)
graph_exp_2sigma_CombAsymp.SetFillStyle(3002)

graph_exp_1sigma_CombAsymp = TGraph(len(masses_exp_CombAsymp),masses_exp_CombAsymp,xs_exp_limits_1sigma_CombAsymp)
graph_exp_1sigma_CombAsymp.SetFillColor(kRed+1)
graph_exp_1sigma_CombAsymp.SetFillStyle(3244)

graph_exp_CombAsymp = TGraph(len(masses_CombAsymp),masses_CombAsymp,xs_exp_limits_CombAsymp)
graph_exp_CombAsymp.SetLineWidth(2)
graph_exp_CombAsymp.SetLineStyle(2)
graph_exp_CombAsymp.SetLineColor(kSpring+7)

graph_obs_CombAsymp = TGraph(len(masses_CombAsymp),masses_CombAsymp,xs_obs_limits_CombAsymp)
graph_obs_CombAsymp.SetMarkerStyle(22)
graph_obs_CombAsymp.SetMarkerColor(kRed)
graph_obs_CombAsymp.SetLineWidth(2)
graph_obs_CombAsymp.SetLineStyle(2)
graph_obs_CombAsymp.SetLineColor(kRed)

graph_obs_CombMCMC = TGraph(len(masses_CombMCMC),masses_CombMCMC,xs_obs_limits_CombMCMC)
graph_obs_CombMCMC.SetMarkerStyle(27)
graph_obs_CombMCMC.SetMarkerSize(1.5)
graph_obs_CombMCMC.SetMarkerColor(7)
graph_obs_CombMCMC.SetLineWidth(2)
graph_obs_CombMCMC.SetLineStyle(3)
graph_obs_CombMCMC.SetLineColor(7)

graph_obs_thetaMCMC = TGraph(len(masses_thetaMCMC),masses_thetaMCMC,xs_obs_limits_thetaMCMC)
graph_obs_thetaMCMC.SetMarkerStyle(32)
#graph_obs_thetaMCMC.SetMarkerSize(1.5)
graph_obs_thetaMCMC.SetMarkerColor(6)
graph_obs_thetaMCMC.SetLineWidth(2)
graph_obs_thetaMCMC.SetLineStyle(4)
graph_obs_thetaMCMC.SetLineColor(6)

c = TCanvas("c", "",800,800)
c.cd()

graph_exp_2sigma.Draw("AF")
graph_exp_1sigma.Draw("F")
#graph_exp_2sigma_CombAsymp.Draw("F")
#graph_exp_1sigma_CombAsymp.Draw("F")
graph_exp.Draw("L")
graph_obs.Draw("LP")
#graph_exp_CombAsymp.Draw("L")
graph_obs_CombAsymp.Draw("LP")
graph_obs_CombMCMC.Draw("LP")
graph_obs_thetaMCMC.Draw("LP")


legend = TLegend(.60,.77,.90,.92)
legend.SetBorderSize(0)
legend.SetFillColor(0)
legend.SetFillStyle(0)
legend.SetTextFont(42)
legend.SetTextSize(0.03)
legend.SetHeader('95% CL upper limits')
legend.AddEntry(graph_obs,"Observed","lp")
legend.AddEntry(graph_exp,"Expected","lp")
legend.AddEntry(graph_exp_1sigma,"#pm 1#sigma","F")
legend.AddEntry(graph_exp_2sigma,"#pm 2#sigma","F")
legend.Draw()

legend_CombAsymp = TLegend(.60,.68,.90,.75)
legend_CombAsymp.SetBorderSize(0)
legend_CombAsymp.SetFillColor(0)
legend_CombAsymp.SetFillStyle(0)
legend_CombAsymp.SetTextFont(42)
legend_CombAsymp.SetTextSize(0.03)
legend_CombAsymp.SetHeader('combine: Asymptotic CL_{S}')
legend_CombAsymp.AddEntry(graph_obs_CombAsymp,"Observed","lp")
#legend_CombAsymp.AddEntry(graph_exp_CombAsymp,"Expected","lp")
#legend_CombAsymp.AddEntry(graph_exp_1sigma_CombAsymp,"#pm 1#sigma","F")
#legend_CombAsymp.AddEntry(graph_exp_2sigma_CombAsymp,"#pm 2#sigma","F")
legend_CombAsymp.Draw()

legend_CombMCMC = TLegend(.60,.59,.90,.66)
legend_CombMCMC.SetBorderSize(0)
legend_CombMCMC.SetFillColor(0)
legend_CombMCMC.SetFillStyle(0)
legend_CombMCMC.SetTextFont(42)
legend_CombMCMC.SetTextSize(0.03)
legend_CombMCMC.SetHeader('combine: Bayesian')
legend_CombMCMC.AddEntry(graph_obs_CombMCMC,"Observed","lp")
legend_CombMCMC.Draw()

legend_thetaMCMC = TLegend(.60,.50,.90,.57)
legend_thetaMCMC.SetBorderSize(0)
legend_thetaMCMC.SetFillColor(0)
legend_thetaMCMC.SetFillStyle(0)
legend_thetaMCMC.SetTextFont(42)
legend_thetaMCMC.SetTextSize(0.03)
legend_thetaMCMC.SetHeader('theta: Bayesian')
legend_thetaMCMC.AddEntry(graph_obs_thetaMCMC,"Observed","lp")
legend_thetaMCMC.Draw()

#l1 = TLatex()
#l1.SetTextAlign(12)
#l1.SetTextFont(42)
#l1.SetNDC()
#l1.SetTextSize(0.04)
#l1.SetTextSize(0.04)
#l1.DrawLatex(0.18,0.40, "CMS Preliminary")
#l1.DrawLatex(0.18,0.32, "#intLdt = 1 fb^{-1}")
#l1.DrawLatex(0.19,0.27, "#sqrt{s} = 13 TeV")

#draw the lumi text on the canvas
CMS_lumi.extraText = "Preliminary"
CMS_lumi.lumi_sqrtS = "37 pb^{-1} (13 TeV)" # used with iPeriod = 0, e.g. for simulation-only plots (default is an empty string)
iPos = 11
iPeriod = 0

CMS_lumi.CMS_lumi(c, iPeriod, iPos)

gPad.RedrawAxis()

c.SetLogy()
c.SaveAs('xs_limit_Comparison_gg' + ('_NoSyst' if not syst else '') + '_Run2_13TeV_DATA_37_invpb.eps')
